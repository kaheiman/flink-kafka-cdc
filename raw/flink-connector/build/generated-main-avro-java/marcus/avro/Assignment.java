/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package marcus.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Assignment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5566664798744080662L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Assignment\",\"namespace\":\"marcus.avro\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"poolKey\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"poolType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"subjectId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"subjectType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"subscriberContextId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"features\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subscriptionIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"assignmentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"enabled\",\"type\":\"boolean\",\"default\":true},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"updatedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"createdBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"utsMigrationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Assignment> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Assignment> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Assignment> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Assignment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Assignment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Assignment to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Assignment from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Assignment instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Assignment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String poolKey;
  private java.lang.String poolType;
  private java.lang.String subjectId;
  private java.lang.String subjectType;
  private java.lang.String subscriberContextId;
  private java.lang.String features;
  private java.lang.String subscriptionIdentifier;
  private java.lang.String assignmentType;
  private boolean enabled;
  private java.time.Instant createdAt;
  private java.time.Instant updatedAt;
  private java.lang.String createdBy;
  private java.lang.String updatedBy;
  private java.lang.String utsMigrationId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Assignment() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param poolKey The new value for poolKey
   * @param poolType The new value for poolType
   * @param subjectId The new value for subjectId
   * @param subjectType The new value for subjectType
   * @param subscriberContextId The new value for subscriberContextId
   * @param features The new value for features
   * @param subscriptionIdentifier The new value for subscriptionIdentifier
   * @param assignmentType The new value for assignmentType
   * @param enabled The new value for enabled
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param createdBy The new value for createdBy
   * @param updatedBy The new value for updatedBy
   * @param utsMigrationId The new value for utsMigrationId
   */
  public Assignment(java.lang.String id, java.lang.String poolKey, java.lang.String poolType, java.lang.String subjectId, java.lang.String subjectType, java.lang.String subscriberContextId, java.lang.String features, java.lang.String subscriptionIdentifier, java.lang.String assignmentType, java.lang.Boolean enabled, java.time.Instant createdAt, java.time.Instant updatedAt, java.lang.String createdBy, java.lang.String updatedBy, java.lang.String utsMigrationId) {
    this.id = id;
    this.poolKey = poolKey;
    this.poolType = poolType;
    this.subjectId = subjectId;
    this.subjectType = subjectType;
    this.subscriberContextId = subscriberContextId;
    this.features = features;
    this.subscriptionIdentifier = subscriptionIdentifier;
    this.assignmentType = assignmentType;
    this.enabled = enabled;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.updatedAt = updatedAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.createdBy = createdBy;
    this.updatedBy = updatedBy;
    this.utsMigrationId = utsMigrationId;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return poolKey;
    case 2: return poolType;
    case 3: return subjectId;
    case 4: return subjectType;
    case 5: return subscriberContextId;
    case 6: return features;
    case 7: return subscriptionIdentifier;
    case 8: return assignmentType;
    case 9: return enabled;
    case 10: return createdAt;
    case 11: return updatedAt;
    case 12: return createdBy;
    case 13: return updatedBy;
    case 14: return utsMigrationId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: poolKey = value$ != null ? value$.toString() : null; break;
    case 2: poolType = value$ != null ? value$.toString() : null; break;
    case 3: subjectId = value$ != null ? value$.toString() : null; break;
    case 4: subjectType = value$ != null ? value$.toString() : null; break;
    case 5: subscriberContextId = value$ != null ? value$.toString() : null; break;
    case 6: features = value$ != null ? value$.toString() : null; break;
    case 7: subscriptionIdentifier = value$ != null ? value$.toString() : null; break;
    case 8: assignmentType = value$ != null ? value$.toString() : null; break;
    case 9: enabled = (java.lang.Boolean)value$; break;
    case 10: createdAt = (java.time.Instant)value$; break;
    case 11: updatedAt = (java.time.Instant)value$; break;
    case 12: createdBy = value$ != null ? value$.toString() : null; break;
    case 13: updatedBy = value$ != null ? value$.toString() : null; break;
    case 14: utsMigrationId = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'poolKey' field.
   * @return The value of the 'poolKey' field.
   */
  public java.lang.String getPoolKey() {
    return poolKey;
  }


  /**
   * Sets the value of the 'poolKey' field.
   * @param value the value to set.
   */
  public void setPoolKey(java.lang.String value) {
    this.poolKey = value;
  }

  /**
   * Gets the value of the 'poolType' field.
   * @return The value of the 'poolType' field.
   */
  public java.lang.String getPoolType() {
    return poolType;
  }


  /**
   * Sets the value of the 'poolType' field.
   * @param value the value to set.
   */
  public void setPoolType(java.lang.String value) {
    this.poolType = value;
  }

  /**
   * Gets the value of the 'subjectId' field.
   * @return The value of the 'subjectId' field.
   */
  public java.lang.String getSubjectId() {
    return subjectId;
  }


  /**
   * Sets the value of the 'subjectId' field.
   * @param value the value to set.
   */
  public void setSubjectId(java.lang.String value) {
    this.subjectId = value;
  }

  /**
   * Gets the value of the 'subjectType' field.
   * @return The value of the 'subjectType' field.
   */
  public java.lang.String getSubjectType() {
    return subjectType;
  }


  /**
   * Sets the value of the 'subjectType' field.
   * @param value the value to set.
   */
  public void setSubjectType(java.lang.String value) {
    this.subjectType = value;
  }

  /**
   * Gets the value of the 'subscriberContextId' field.
   * @return The value of the 'subscriberContextId' field.
   */
  public java.lang.String getSubscriberContextId() {
    return subscriberContextId;
  }


  /**
   * Sets the value of the 'subscriberContextId' field.
   * @param value the value to set.
   */
  public void setSubscriberContextId(java.lang.String value) {
    this.subscriberContextId = value;
  }

  /**
   * Gets the value of the 'features' field.
   * @return The value of the 'features' field.
   */
  public java.lang.String getFeatures() {
    return features;
  }


  /**
   * Sets the value of the 'features' field.
   * @param value the value to set.
   */
  public void setFeatures(java.lang.String value) {
    this.features = value;
  }

  /**
   * Gets the value of the 'subscriptionIdentifier' field.
   * @return The value of the 'subscriptionIdentifier' field.
   */
  public java.lang.String getSubscriptionIdentifier() {
    return subscriptionIdentifier;
  }


  /**
   * Sets the value of the 'subscriptionIdentifier' field.
   * @param value the value to set.
   */
  public void setSubscriptionIdentifier(java.lang.String value) {
    this.subscriptionIdentifier = value;
  }

  /**
   * Gets the value of the 'assignmentType' field.
   * @return The value of the 'assignmentType' field.
   */
  public java.lang.String getAssignmentType() {
    return assignmentType;
  }


  /**
   * Sets the value of the 'assignmentType' field.
   * @param value the value to set.
   */
  public void setAssignmentType(java.lang.String value) {
    this.assignmentType = value;
  }

  /**
   * Gets the value of the 'enabled' field.
   * @return The value of the 'enabled' field.
   */
  public boolean getEnabled() {
    return enabled;
  }


  /**
   * Sets the value of the 'enabled' field.
   * @param value the value to set.
   */
  public void setEnabled(boolean value) {
    this.enabled = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.time.Instant getUpdatedAt() {
    return updatedAt;
  }


  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.time.Instant value) {
    this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.String getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.String value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.lang.String getUpdatedBy() {
    return updatedBy;
  }


  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.lang.String value) {
    this.updatedBy = value;
  }

  /**
   * Gets the value of the 'utsMigrationId' field.
   * @return The value of the 'utsMigrationId' field.
   */
  public java.lang.String getUtsMigrationId() {
    return utsMigrationId;
  }


  /**
   * Sets the value of the 'utsMigrationId' field.
   * @param value the value to set.
   */
  public void setUtsMigrationId(java.lang.String value) {
    this.utsMigrationId = value;
  }

  /**
   * Creates a new Assignment RecordBuilder.
   * @return A new Assignment RecordBuilder
   */
  public static marcus.avro.Assignment.Builder newBuilder() {
    return new marcus.avro.Assignment.Builder();
  }

  /**
   * Creates a new Assignment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Assignment RecordBuilder
   */
  public static marcus.avro.Assignment.Builder newBuilder(marcus.avro.Assignment.Builder other) {
    if (other == null) {
      return new marcus.avro.Assignment.Builder();
    } else {
      return new marcus.avro.Assignment.Builder(other);
    }
  }

  /**
   * Creates a new Assignment RecordBuilder by copying an existing Assignment instance.
   * @param other The existing instance to copy.
   * @return A new Assignment RecordBuilder
   */
  public static marcus.avro.Assignment.Builder newBuilder(marcus.avro.Assignment other) {
    if (other == null) {
      return new marcus.avro.Assignment.Builder();
    } else {
      return new marcus.avro.Assignment.Builder(other);
    }
  }

  /**
   * RecordBuilder for Assignment instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Assignment>
    implements org.apache.avro.data.RecordBuilder<Assignment> {

    private java.lang.String id;
    private java.lang.String poolKey;
    private java.lang.String poolType;
    private java.lang.String subjectId;
    private java.lang.String subjectType;
    private java.lang.String subscriberContextId;
    private java.lang.String features;
    private java.lang.String subscriptionIdentifier;
    private java.lang.String assignmentType;
    private boolean enabled;
    private java.time.Instant createdAt;
    private java.time.Instant updatedAt;
    private java.lang.String createdBy;
    private java.lang.String updatedBy;
    private java.lang.String utsMigrationId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(marcus.avro.Assignment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.poolKey)) {
        this.poolKey = data().deepCopy(fields()[1].schema(), other.poolKey);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.poolType)) {
        this.poolType = data().deepCopy(fields()[2].schema(), other.poolType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.subjectId)) {
        this.subjectId = data().deepCopy(fields()[3].schema(), other.subjectId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.subjectType)) {
        this.subjectType = data().deepCopy(fields()[4].schema(), other.subjectType);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.subscriberContextId)) {
        this.subscriberContextId = data().deepCopy(fields()[5].schema(), other.subscriberContextId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.features)) {
        this.features = data().deepCopy(fields()[6].schema(), other.features);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.subscriptionIdentifier)) {
        this.subscriptionIdentifier = data().deepCopy(fields()[7].schema(), other.subscriptionIdentifier);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.assignmentType)) {
        this.assignmentType = data().deepCopy(fields()[8].schema(), other.assignmentType);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.enabled)) {
        this.enabled = data().deepCopy(fields()[9].schema(), other.enabled);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[10].schema(), other.createdAt);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[11].schema(), other.updatedAt);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[12].schema(), other.createdBy);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[13].schema(), other.updatedBy);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.utsMigrationId)) {
        this.utsMigrationId = data().deepCopy(fields()[14].schema(), other.utsMigrationId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing Assignment instance
     * @param other The existing instance to copy.
     */
    private Builder(marcus.avro.Assignment other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.poolKey)) {
        this.poolKey = data().deepCopy(fields()[1].schema(), other.poolKey);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.poolType)) {
        this.poolType = data().deepCopy(fields()[2].schema(), other.poolType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.subjectId)) {
        this.subjectId = data().deepCopy(fields()[3].schema(), other.subjectId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subjectType)) {
        this.subjectType = data().deepCopy(fields()[4].schema(), other.subjectType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.subscriberContextId)) {
        this.subscriberContextId = data().deepCopy(fields()[5].schema(), other.subscriberContextId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.features)) {
        this.features = data().deepCopy(fields()[6].schema(), other.features);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.subscriptionIdentifier)) {
        this.subscriptionIdentifier = data().deepCopy(fields()[7].schema(), other.subscriptionIdentifier);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.assignmentType)) {
        this.assignmentType = data().deepCopy(fields()[8].schema(), other.assignmentType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.enabled)) {
        this.enabled = data().deepCopy(fields()[9].schema(), other.enabled);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[10].schema(), other.createdAt);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[11].schema(), other.updatedAt);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[12].schema(), other.createdBy);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[13].schema(), other.updatedBy);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.utsMigrationId)) {
        this.utsMigrationId = data().deepCopy(fields()[14].schema(), other.utsMigrationId);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'poolKey' field.
      * @return The value.
      */
    public java.lang.String getPoolKey() {
      return poolKey;
    }


    /**
      * Sets the value of the 'poolKey' field.
      * @param value The value of 'poolKey'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setPoolKey(java.lang.String value) {
      validate(fields()[1], value);
      this.poolKey = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'poolKey' field has been set.
      * @return True if the 'poolKey' field has been set, false otherwise.
      */
    public boolean hasPoolKey() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'poolKey' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearPoolKey() {
      poolKey = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'poolType' field.
      * @return The value.
      */
    public java.lang.String getPoolType() {
      return poolType;
    }


    /**
      * Sets the value of the 'poolType' field.
      * @param value The value of 'poolType'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setPoolType(java.lang.String value) {
      validate(fields()[2], value);
      this.poolType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'poolType' field has been set.
      * @return True if the 'poolType' field has been set, false otherwise.
      */
    public boolean hasPoolType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'poolType' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearPoolType() {
      poolType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'subjectId' field.
      * @return The value.
      */
    public java.lang.String getSubjectId() {
      return subjectId;
    }


    /**
      * Sets the value of the 'subjectId' field.
      * @param value The value of 'subjectId'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setSubjectId(java.lang.String value) {
      validate(fields()[3], value);
      this.subjectId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'subjectId' field has been set.
      * @return True if the 'subjectId' field has been set, false otherwise.
      */
    public boolean hasSubjectId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'subjectId' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearSubjectId() {
      subjectId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'subjectType' field.
      * @return The value.
      */
    public java.lang.String getSubjectType() {
      return subjectType;
    }


    /**
      * Sets the value of the 'subjectType' field.
      * @param value The value of 'subjectType'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setSubjectType(java.lang.String value) {
      validate(fields()[4], value);
      this.subjectType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'subjectType' field has been set.
      * @return True if the 'subjectType' field has been set, false otherwise.
      */
    public boolean hasSubjectType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'subjectType' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearSubjectType() {
      subjectType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriberContextId' field.
      * @return The value.
      */
    public java.lang.String getSubscriberContextId() {
      return subscriberContextId;
    }


    /**
      * Sets the value of the 'subscriberContextId' field.
      * @param value The value of 'subscriberContextId'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setSubscriberContextId(java.lang.String value) {
      validate(fields()[5], value);
      this.subscriberContextId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriberContextId' field has been set.
      * @return True if the 'subscriberContextId' field has been set, false otherwise.
      */
    public boolean hasSubscriberContextId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'subscriberContextId' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearSubscriberContextId() {
      subscriberContextId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'features' field.
      * @return The value.
      */
    public java.lang.String getFeatures() {
      return features;
    }


    /**
      * Sets the value of the 'features' field.
      * @param value The value of 'features'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setFeatures(java.lang.String value) {
      validate(fields()[6], value);
      this.features = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'features' field has been set.
      * @return True if the 'features' field has been set, false otherwise.
      */
    public boolean hasFeatures() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'features' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearFeatures() {
      features = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriptionIdentifier' field.
      * @return The value.
      */
    public java.lang.String getSubscriptionIdentifier() {
      return subscriptionIdentifier;
    }


    /**
      * Sets the value of the 'subscriptionIdentifier' field.
      * @param value The value of 'subscriptionIdentifier'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setSubscriptionIdentifier(java.lang.String value) {
      validate(fields()[7], value);
      this.subscriptionIdentifier = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriptionIdentifier' field has been set.
      * @return True if the 'subscriptionIdentifier' field has been set, false otherwise.
      */
    public boolean hasSubscriptionIdentifier() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'subscriptionIdentifier' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearSubscriptionIdentifier() {
      subscriptionIdentifier = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'assignmentType' field.
      * @return The value.
      */
    public java.lang.String getAssignmentType() {
      return assignmentType;
    }


    /**
      * Sets the value of the 'assignmentType' field.
      * @param value The value of 'assignmentType'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setAssignmentType(java.lang.String value) {
      validate(fields()[8], value);
      this.assignmentType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'assignmentType' field has been set.
      * @return True if the 'assignmentType' field has been set, false otherwise.
      */
    public boolean hasAssignmentType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'assignmentType' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearAssignmentType() {
      assignmentType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'enabled' field.
      * @return The value.
      */
    public boolean getEnabled() {
      return enabled;
    }


    /**
      * Sets the value of the 'enabled' field.
      * @param value The value of 'enabled'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setEnabled(boolean value) {
      validate(fields()[9], value);
      this.enabled = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'enabled' field has been set.
      * @return True if the 'enabled' field has been set, false otherwise.
      */
    public boolean hasEnabled() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'enabled' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearEnabled() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[10], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearCreatedAt() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.time.Instant getUpdatedAt() {
      return updatedAt;
    }


    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setUpdatedAt(java.time.Instant value) {
      validate(fields()[11], value);
      this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearUpdatedAt() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.String getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setCreatedBy(java.lang.String value) {
      validate(fields()[12], value);
      this.createdBy = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.lang.String getUpdatedBy() {
      return updatedBy;
    }


    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setUpdatedBy(java.lang.String value) {
      validate(fields()[13], value);
      this.updatedBy = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'utsMigrationId' field.
      * @return The value.
      */
    public java.lang.String getUtsMigrationId() {
      return utsMigrationId;
    }


    /**
      * Sets the value of the 'utsMigrationId' field.
      * @param value The value of 'utsMigrationId'.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder setUtsMigrationId(java.lang.String value) {
      validate(fields()[14], value);
      this.utsMigrationId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'utsMigrationId' field has been set.
      * @return True if the 'utsMigrationId' field has been set, false otherwise.
      */
    public boolean hasUtsMigrationId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'utsMigrationId' field.
      * @return This builder.
      */
    public marcus.avro.Assignment.Builder clearUtsMigrationId() {
      utsMigrationId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Assignment build() {
      try {
        Assignment record = new Assignment();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.poolKey = fieldSetFlags()[1] ? this.poolKey : (java.lang.String) defaultValue(fields()[1]);
        record.poolType = fieldSetFlags()[2] ? this.poolType : (java.lang.String) defaultValue(fields()[2]);
        record.subjectId = fieldSetFlags()[3] ? this.subjectId : (java.lang.String) defaultValue(fields()[3]);
        record.subjectType = fieldSetFlags()[4] ? this.subjectType : (java.lang.String) defaultValue(fields()[4]);
        record.subscriberContextId = fieldSetFlags()[5] ? this.subscriberContextId : (java.lang.String) defaultValue(fields()[5]);
        record.features = fieldSetFlags()[6] ? this.features : (java.lang.String) defaultValue(fields()[6]);
        record.subscriptionIdentifier = fieldSetFlags()[7] ? this.subscriptionIdentifier : (java.lang.String) defaultValue(fields()[7]);
        record.assignmentType = fieldSetFlags()[8] ? this.assignmentType : (java.lang.String) defaultValue(fields()[8]);
        record.enabled = fieldSetFlags()[9] ? this.enabled : (java.lang.Boolean) defaultValue(fields()[9]);
        record.createdAt = fieldSetFlags()[10] ? this.createdAt : (java.time.Instant) defaultValue(fields()[10]);
        record.updatedAt = fieldSetFlags()[11] ? this.updatedAt : (java.time.Instant) defaultValue(fields()[11]);
        record.createdBy = fieldSetFlags()[12] ? this.createdBy : (java.lang.String) defaultValue(fields()[12]);
        record.updatedBy = fieldSetFlags()[13] ? this.updatedBy : (java.lang.String) defaultValue(fields()[13]);
        record.utsMigrationId = fieldSetFlags()[14] ? this.utsMigrationId : (java.lang.String) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Assignment>
    WRITER$ = (org.apache.avro.io.DatumWriter<Assignment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Assignment>
    READER$ = (org.apache.avro.io.DatumReader<Assignment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










