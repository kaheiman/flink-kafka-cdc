plugins {
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
    id 'java'
    id 'application'
    // shadow plugin to produce fat JARs
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'io.freefair.lombok' version '8.0.1'
}

ext {
    javaVersion = '1.11'
    flinkVersion = '1.20.0'
    flinkConnectorVersion = '3.3.0-1.20'
    kafkaVersion = "3.3.0"
    scalaBinaryVersion = '2.12'
    slf4jVersion = '1.7.36'
    log4jVersion = '2.17.1'
    lombokVersion = '1.18.34'
    mysqlCdcVersion = '3.0.1'
    flinkVersionNew = flinkVersion.toString().replace("-SNAPSHOT", "") >= ""
}

// artifact properties
group = 'marcus'
version = '1.0-SNAPSHOT'
mainClassName = 'marcus.MySQLCDCWithSchemaRegistry'
description = """Flink CDC Job"""
apply plugin: 'io.freefair.lombok'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=log4j2.properties"]

// declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots"
        mavenContent {
            snapshotsOnly()
        }
    }
    maven {
        url "https://repo.maven.apache.org/maven2/"
    }
    maven { url "https://packages.confluent.io/maven" }
}

// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar

    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

// declare the dependencies for your production and test code
dependencies {
    // --------------------------------------------------------------
    // Compile-time dependencies that should NOT be part of the
    // shadow jar and are provided in the lib folder of Flink
    // --------------------------------------------------------------
    if (flinkVersionNew) {
        implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
        implementation "org.apache.flink:flink-clients:${flinkVersion}"
        implementation "org.apache.flink:flink-java:${flinkVersion}"
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
        compileOnly "org.apache.flink:flink-json:${flinkVersion}"
        testImplementation  "org.apache.flink:flink-test-utils:${flinkVersion}"
        implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"
        implementation "org.apache.flink:flink-connector-base:${flinkVersion}"


    } else {
        implementation "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
        implementation "org.apache.flink:flink-clients_${scalaBinaryVersion}:${flinkVersion}"
    }

    // --------------------------------------------------------------
    // Dependencies that should be part of the shadow jar, e.g.
    // connectors. These must be in the flinkShadowJar configuration!
    // --------------------------------------------------------------
    flinkShadowJar "org.apache.flink:flink-connector-kafka:${flinkConnectorVersion}"
    flinkShadowJar "org.apache.flink:flink-connector-mongodb:1.2.0-1.19"
    flinkShadowJar "org.mongodb:mongodb-driver-sync:5.2.1"
    flinkShadowJar "org.mongodb:bson:4.11.1"
    flinkShadowJar "com.fasterxml.jackson.core:jackson-databind:2.15.2"
    flinkShadowJar "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2"
    flinkShadowJar "commons-beanutils:commons-beanutils:1.9.4"
    flinkShadowJar "com.ververica:flink-cdc-connectors:${mysqlCdcVersion}"
    flinkShadowJar "com.ververica:flink-connector-mysql-cdc:${mysqlCdcVersion}"
    flinkShadowJar "org.apache.flink:flink-json:${flinkVersion}"
    flinkShadowJar "mysql:mysql-connector-java:8.0.33"
    flinkShadowJar 'org.apache.avro:avro:1.11.1'
    flinkShadowJar 'org.apache.flink:flink-avro-confluent-registry:1.20.0'
    flinkShadowJar 'org.apache.flink:flink-avro:1.20.0'
    flinkShadowJar 'io.confluent:kafka-avro-serializer:7.2.1'        

    implementation "org.apache.flink:flink-connector-kafka:${flinkConnectorVersion}"
    implementation "org.apache.flink:flink-connector-mongodb:1.2.0-1.19"
    implementation "org.mongodb:mongodb-driver-sync:5.2.1"
    implementation "org.mongodb:bson:4.11.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.2"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2"
    implementation "commons-beanutils:commons-beanutils:1.9.4"
    implementation "com.ververica:flink-cdc-connectors:${mysqlCdcVersion}"
    implementation "com.ververica:flink-connector-mysql-cdc:${mysqlCdcVersion}"
    implementation "org.apache.flink:flink-json:${flinkVersion}"
    implementation "mysql:mysql-connector-java:8.0.33"
    implementation 'org.apache.avro:avro:1.11.1'
    implementation 'org.apache.flink:flink-avro-confluent-registry:1.20.0'
    implementation 'org.apache.flink:flink-avro:1.20.0'
    implementation 'io.confluent:kafka-avro-serializer:7.2.1'         

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    // Add test dependencies here.
    // testCompile "junit:junit:4.12"
}


// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar

    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar

    javadoc.classpath += configurations.flinkShadowJar
}

run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes  'Built-By': System.getProperty('user.name'),
                    'Build-Jdk': System.getProperty('java.version'),
                    'Main-Class': "${mainClassName}"
    }
    from('src/main/resources') {
        include 'rds-truststore.jks'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

}

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
}
